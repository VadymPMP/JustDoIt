// <auto-generated />
using System;
using JustDoIt.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace JustDoIt.Migrations
{
    [DbContext(typeof(AplicationContext))]
    partial class AplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("JustDoIt.Models.Notes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Notes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Date = new DateTime(2012, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Note = "Hy, today I read the book",
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Date = new DateTime(2018, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Note = "Hy, today I swim",
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            Date = new DateTime(2012, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Note = "Hy, today I read the book and in the evening run",
                            UserId = 3
                        });
                });

            modelBuilder.Entity("JustDoIt.Models.Users", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecondName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Age = 18,
                            Email = "qwert@gmail.com",
                            FirstName = "Mykhailo",
                            Password = "123456",
                            SecondName = "Shastun"
                        },
                        new
                        {
                            Id = 2,
                            Age = 18,
                            Email = "qwer@gmail.com",
                            FirstName = "Volodymyr",
                            Password = "123456",
                            SecondName = "Sydorko"
                        },
                        new
                        {
                            Id = 3,
                            Age = 18,
                            Email = "qwerty@gmail.com",
                            FirstName = "Vadym",
                            Password = "123456",
                            SecondName = "Pyshniak"
                        });
                });

            modelBuilder.Entity("JustDoIt.Models.Notes", b =>
                {
                    b.HasOne("JustDoIt.Models.Users", "User")
                        .WithMany("Notest")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
